{"version":3,"sources":["BooksAPI.js","BookChanger.js","SearchBooks.js","BookShelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookChanger","_ref","changeShelf","react_default","a","createElement","value","onChange","event","target","disabled","SearchBooks","state","displayForSearch","searchQuery","_callee","regenerator_default","wrap","_context","prev","next","_this","props","BooksAPI","sent","error","setState","map","foundBook","t0","console","log","stop","_this2","this","_this$props","className","Link","to","type","placeholder","key","style","width","height","backgroundImage","undefined","imageLinks","thumbnail","src_BookChanger","title","author","React","Component","BookShelf","BooksApp","result","filter","filtered","Route","exact","path","render","src_BookShelf","src_SearchBooks","ReactDOM","HashRouter","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f625f15c.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\n\r\nconst BookChanger = ({changeShelf, book}) => {\r\n    return (\r\n        <select value={book.shelf} onChange={event => changeShelf(event.target.value, book)}>\r\n            <option value=\"move\" disabled>Move to...</option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n        </select>\r\n    );\r\n}\r\n\r\n\r\nexport default BookChanger;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport BookChanger from './BookChanger'\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nclass SearchBooks extends React.Component {\r\n\r\n    state = {\r\n        displayForSearch: []\r\n    }\r\n\r\n    searchQuery = async query => {\r\n        const { books } = this.props;\r\n        \r\n        if (query !== '') {\r\n            try{\r\n\r\n                let res = await BooksAPI.search(query);\r\n                !res || res.error ? this.setState({displayForSearch: []}) :\r\n                    res.map(foundBook => \r\n                            \r\n                        books.map(book => foundBook.id === book.id ? foundBook.shelf = book.shelf : foundBook.shelf = 'none')\r\n                        // return foundBook;\r\n                    )\r\n                    \r\n                    this.setState({ displayForSearch: res })\r\n\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        } else {\r\n            this.setState({ displayForSearch: [] })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const { displayForSearch } = this.state;\r\n        const { query, changeShelf } = this.props;\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to='./' className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search by title or author\"\r\n                            value={query}\r\n                            onChange={event => this.searchQuery(event.target.value)}\r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {displayForSearch && displayForSearch.map((book) => (\r\n                            <li key={book.id}>\r\n                                <div className=\"book\">\r\n                                    <div className=\"book-top\">\r\n                                        <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: book.imageLinks === undefined ? `url(https://s7.postimg.cc/shls4dbcb/persons.png)` : `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                        <div className=\"book-shelf-changer\">\r\n                                            <BookChanger book={book} changeShelf={changeShelf} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"book-title\">{book.title}</div>\r\n                                    <div className=\"book-authors\">{book.author}</div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBooks","import React from 'react'\r\nimport BookChanger from './BookChanger'\r\n\r\nconst BookShelf = ({books, title, changeShelf}) => {\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {books.map(book => book.shelf === title  && (\r\n                        <li key={book.id}>\r\n                            <div className=\"book\">\r\n                                <div className=\"book-top\">\r\n                                    <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}></div>\r\n                                    <div className=\"book-shelf-changer\">\r\n                                        <BookChanger changeShelf={changeShelf} book={book}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"book-title\">{book.title}</div>\r\n                                <div className=\"book-authors\">{book.author}</div>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BookShelf;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport SearchBooks from './SearchBooks'\r\nimport { Route } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport BookShelf from './BookShelf'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: []\r\n  }\r\n\r\n  async componentDidMount(){\r\n\r\n    try{\r\n      let books = await BooksAPI.getAll();\r\n      this.setState({books});\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  changeShelf = (shelf, book) => {\r\n    \r\n    let result = [];\r\n\r\n    BooksAPI.update(book, shelf).then(() => {\r\n\r\n      book.shelf = shelf;\r\n\r\n      result = this.state.books.filter(filtered => filtered.id !== book.id)\r\n      this.setState({ books: result.concat(book) })\r\n\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { books } = this.state;\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path='/' render={() => (\r\n            <div className=\"list-books\">\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <div>\r\n\r\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                  <BookShelf title=\"currentlyReading\" books={books} changeShelf={this.changeShelf}/>\r\n\r\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                  <BookShelf title=\"wantToRead\" books={books} changeShelf={this.changeShelf}/>\r\n\r\n                  <h2 className=\"bookshelf-title\">Read</h2>\r\n                  <BookShelf title=\"read\" books={books} changeShelf={this.changeShelf}/>\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"open-search\">\r\n                <Link to='/search' >Add a book</Link>\r\n              </div>\r\n            </div>\r\n          \r\n        )}/>\r\n          \r\n        <Route path='/search' render={() => (\r\n          <SearchBooks books={books} searchQuery={this.searchQuery} changeShelf={this.changeShelf}/>\r\n        )}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <HashRouter basename=\"/\">\r\n        <App />\r\n    </HashRouter>,\r\n     document.getElementById('root'))\r\n"],"sourceRoot":""}